#libraries need to install befor running the code 
#pip install openai
#pip install youtube_dl
#pip install pydub
#pip install SpeechRecognition
#pip install google-cloud-speech

import os
import re
import textwrap
import urllib.request
import wave

import openai
import speech_recognition as sr

# from google.colab import files
import io
from google.cloud import speech_v1p1beta1 as speech
from pydub import AudioSegment


import openai
openai.api_key = "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"
openai.organization = "org-kEmiTm3q7PSG6ImxQHFhQVoz"


import youtube_dl
import os
import subprocess

def download_audio(url):
    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
        'outtmpl': '%(title)s.%(ext)s',  # Set the output file name template
    }

    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        info_dict = ydl.extract_info(url, download=True)
        audio_filename = ydl.prepare_filename(info_dict)

    return audio_filename

# Replace 'YOUR_DAILYMOTION_VIDEO_URL' with the actual URL of the video

video_url=input("paste the video link here : ")
#video_url = 'https://dai.ly/x7y55ql'  ### Paste your daily motion vide here 
audio_file = download_audio(video_url)
audio_file=audio_file.replace('mp4','mp3')


mp3_audio = AudioSegment.from_file(audio_file, format="mp3")
wav_audio = mp3_audio.export("audio.wav", format="wav")



import speech_recognition as sr
# Initialize recognizer class                                       
r = sr.Recognizer()
# audio object                                                         
audio = sr.AudioFile('audio.wav')
#read audio object and transcribe
with audio as source:
    audio = r.record(source)                  
    result = r.recognize_google(audio)
    
print("Transcibed text :", result)



def response_generate(text):
    response = openai.Completion.create(
  model="text-davinci-003",
  prompt=f"Please summarise this : {text} \:",
  temperature=0.5,
  max_tokens=80,
  top_p=0.3,
  frequency_penalty=0.5,
  presence_penalty=0.0
)
    return response['choices'][0]['text']

summary_text=response_generate(result)
print("Summary :", response_generate(result))
SUMMARY_FILE_PATH="./summary.txt"
with open(SUMMARY_FILE_PATH, "w", encoding="utf-8") as f:
    f.write(summary_text)

print(f"Summary saved to {SUMMARY_FILE_PATH}")
